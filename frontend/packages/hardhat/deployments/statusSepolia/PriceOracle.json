{
  "address": "0xAa58cB277E823b3D6a869712Aab0d4670a7778FA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum PriceOracle.CropType",
          "name": "cropType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "PriceMultiplierUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE_GRAPE_CROP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_GRAPE_SEED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_PUMPKIN_CROP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_PUMPKIN_SEED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_WHEAT_CROP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_WHEAT_SEED",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedManagers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PriceOracle.CropType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "cropMultipliers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PriceOracle.CropType",
          "name": "cropType",
          "type": "uint8"
        }
      ],
      "name": "getCropPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PriceOracle.SeedType",
          "name": "seedType",
          "type": "uint8"
        }
      ],
      "name": "getSeedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PriceOracle.SeedType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "seedMultipliers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setAuthorizedManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "setWheatMultiplier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbcec27069b6a0f461bcc0462913bc41e50317274ce5c52a5aba05c8c35a3b4a4",
  "receipt": {
    "to": null,
    "from": "0x38048c9AcEF95Cb2866e58Da69dd96B71870c55C",
    "contractAddress": "0xAa58cB277E823b3D6a869712Aab0d4670a7778FA",
    "transactionIndex": 11,
    "gasUsed": "629630",
    "logsBloom": "0x
    "blockHash": "0x5be775010c5dad0e666b1d9c6551985dcff48907d67e6b4e2498d5ea6bce667c",
    "transactionHash": "0xbcec27069b6a0f461bcc0462913bc41e50317274ce5c52a5aba05c8c35a3b4a4",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 11777372,
        "transactionHash": "0xbcec27069b6a0f461bcc0462913bc41e50317274ce5c52a5aba05c8c35a3b4a4",
        "address": "0xAa58cB277E823b3D6a869712Aab0d4670a7778FA",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000038048c9acef95cb2866e58da69dd96b71870c55c"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0x5be775010c5dad0e666b1d9c6551985dcff48907d67e6b4e2498d5ea6bce667c"
      }
    ],
    "blockNumber": 11777372,
    "cumulativeGasUsed": "1189943",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x38048c9AcEF95Cb2866e58Da69dd96B71870c55C"
  ],
  "numDeployments": 1,
  "solcInputHash": "2c880685ebef2f561b9dccee97fd02f5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum PriceOracle.CropType\",\"name\":\"cropType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"PriceMultiplierUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_GRAPE_CROP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_GRAPE_SEED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_PUMPKIN_CROP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_PUMPKIN_SEED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_WHEAT_CROP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_WHEAT_SEED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PriceOracle.CropType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"cropMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PriceOracle.CropType\",\"name\":\"cropType\",\"type\":\"uint8\"}],\"name\":\"getCropPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PriceOracle.SeedType\",\"name\":\"seedType\",\"type\":\"uint8\"}],\"name\":\"getSeedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PriceOracle.SeedType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"seedMultipliers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"setWheatMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceOracle.sol\":\"PriceOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/PriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract PriceOracle is Ownable {\\n    enum CropType { WHEAT, GRAPE, PUMPKIN }\\n    enum SeedType { WHEAT_SEED, GRAPE_SEED, PUMPKIN_SEED }\\n    \\n    uint256 public constant BASE_WHEAT_SEED = 0.005 ether;\\n    uint256 public constant BASE_GRAPE_SEED = 0.012 ether;\\n    uint256 public constant BASE_PUMPKIN_SEED = 0.020 ether;\\n    \\n    uint256 public constant BASE_WHEAT_CROP = 0.010 ether;\\n    uint256 public constant BASE_GRAPE_CROP = 0.025 ether;\\n    uint256 public constant BASE_PUMPKIN_CROP = 0.045 ether;\\n    \\n    mapping(CropType => uint256) public cropMultipliers;\\n    mapping(SeedType => uint256) public seedMultipliers;\\n    mapping(address => bool) public authorizedManagers;\\n    \\n    event PriceMultiplierUpdated(CropType indexed cropType, uint256 multiplier);\\n    \\n    constructor(address initialOwner) Ownable(initialOwner) {\\n        cropMultipliers[CropType.WHEAT] = 1000;\\n        cropMultipliers[CropType.GRAPE] = 1000;\\n        cropMultipliers[CropType.PUMPKIN] = 1000;\\n        seedMultipliers[SeedType.WHEAT_SEED] = 1000;\\n        seedMultipliers[SeedType.GRAPE_SEED] = 1000;\\n        seedMultipliers[SeedType.PUMPKIN_SEED] = 1000;\\n    }\\n    \\n    modifier onlyAuthorized() {\\n        require(authorizedManagers[msg.sender] || msg.sender == owner(), \\\"Not authorized\\\");\\n        _;\\n    }\\n    \\n    function setAuthorizedManager(address manager, bool authorized) external onlyOwner {\\n        authorizedManagers[manager] = authorized;\\n    }\\n    \\n    function setWheatMultiplier(uint256 multiplier) external onlyAuthorized {\\n        uint256 multiplierBasis = multiplier * 1000;\\n        cropMultipliers[CropType.WHEAT] = multiplierBasis;\\n        seedMultipliers[SeedType.WHEAT_SEED] = multiplierBasis;\\n        emit PriceMultiplierUpdated(CropType.WHEAT, multiplierBasis);\\n    }\\n    \\n    function getSeedPrice(SeedType seedType) public view returns (uint256) {\\n        uint256 basePrice;\\n        if (seedType == SeedType.WHEAT_SEED) basePrice = BASE_WHEAT_SEED;\\n        else if (seedType == SeedType.GRAPE_SEED) basePrice = BASE_GRAPE_SEED;\\n        else basePrice = BASE_PUMPKIN_SEED;\\n        return (basePrice * seedMultipliers[seedType]) / 1000;\\n    }\\n    \\n    function getCropPrice(CropType cropType) public view returns (uint256) {\\n        uint256 basePrice;\\n        if (cropType == CropType.WHEAT) basePrice = BASE_WHEAT_CROP;\\n        else if (cropType == CropType.GRAPE) basePrice = BASE_GRAPE_CROP;\\n        else basePrice = BASE_PUMPKIN_CROP;\\n        return (basePrice * cropMultipliers[cropType]) / 1000;\\n    }\\n    \\n    function getAllPrices() external view returns (uint256, uint256, uint256, uint256, uint256, uint256) {\\n        return (\\n            getSeedPrice(SeedType.WHEAT_SEED),\\n            getSeedPrice(SeedType.GRAPE_SEED),\\n            getSeedPrice(SeedType.PUMPKIN_SEED),\\n            getCropPrice(CropType.WHEAT),\\n            getCropPrice(CropType.GRAPE),\\n            getCropPrice(CropType.PUMPKIN)\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x9e0e142c2ede7b22f60a7c40ef2d55384ddb3958f487a5a9c3bdfcf651cb39ac\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161095638038061095683398101604081905261002f916101a1565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610151565b50506103e87fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb498190557fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f8190557fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f819055600260208190527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b8290557fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e08290556000527f679795a0195a1b76cdebb7c51d74e058aee92919b8c3389af86ef24535e8a28c556101d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101b357600080fd5b81516001600160a01b03811681146101ca57600080fd5b9392505050565b610776806101e06000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063984d9181116100a2578063cc098bf611610071578063cc098bf61461024e578063db25978214610261578063e97eb1331461026f578063eea138e11461027d578063f2fde38b1461029057600080fd5b8063984d9181146101ff5780639d3468821461021f578063c6b3c94c1461022d578063c7cc48121461024057600080fd5b8063445df9d6116100de578063445df9d614610187578063715018a6146101bc5780637d1c98ce146101c45780638da5cb5b146101e457600080fd5b80630a3cb21b1461011057806329dfcda1146101485780632b71fb3a146101645780632bd696fd14610179575b600080fd5b61013361011e366004610643565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610156662386f26fc1000081565b60405190815260200161013f565b61017761017236600461065e565b6102a3565b005b610156662aa1efb94e000081565b61018f6102d6565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161013f565b61017761032e565b6101566101d23660046106a7565b60016020526000908152604090205481565b6000546040516001600160a01b03909116815260200161013f565b61015661020d3660046106a7565b60026020526000908152604090205481565b6101566611c37937e0800081565b61017761023b3660046106c4565b610342565b61015666470de4df82000081565b61015661025c3660046106a7565b61044a565b6101566658d15e1762800081565b610156669fdf42f6e4800081565b61015661028b3660046106a7565b6104f9565b61017761029e366004610643565b61056c565b6102ab6105aa565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000806000806000806102e9600061044a565b6102f3600161044a565b6102fd600261044a565b61030760006104f9565b61031160016104f9565b61031b60026104f9565b949b939a50919850965094509092509050565b6103366105aa565b61034060006105d7565b565b3360009081526003602052604090205460ff168061036a57506000546001600160a01b031633145b6103ac5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b60006103ba826103e86106dd565b60008080527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49829055600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b83905560408051848152905193945091927f238022b1e6d385323bbf0d8d87ba282ac6120f8dc78ef82f08ab5630e2fad81a9281900390910190a25050565b6000808083600281111561046057610460610708565b0361047357506611c37937e080006104a4565b600183600281111561048757610487610708565b0361049a5750662aa1efb94e00006104a4565b5066470de4df8200005b6103e8600260008560028111156104bd576104bd610708565b60028111156104ce576104ce610708565b815260200190815260200160002054826104e891906106dd565b6104f2919061071e565b9392505050565b6000808083600281111561050f5761050f610708565b036105225750662386f26fc10000610553565b600183600281111561053657610536610708565b0361054957506658d15e17628000610553565b50669fdf42f6e480005b6103e8600160008560028111156104bd576104bd610708565b6105746105aa565b6001600160a01b03811661059e57604051631e4fbdf760e01b8152600060048201526024016103a3565b6105a7816105d7565b50565b6000546001600160a01b031633146103405760405163118cdaa760e01b81523360048201526024016103a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461063e57600080fd5b919050565b60006020828403121561065557600080fd5b6104f282610627565b6000806040838503121561067157600080fd5b61067a83610627565b91506020830135801515811461068f57600080fd5b809150509250929050565b600381106105a757600080fd5b6000602082840312156106b957600080fd5b81356104f28161069a565b6000602082840312156106d657600080fd5b5035919050565b808202811582820484141761070257634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052602160045260246000fd5b60008261073b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b65d13e7c3ac8ced1abecdd77a15a43efb8dd71fe79de1bdb4ef90f3e041326564736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063984d9181116100a2578063cc098bf611610071578063cc098bf61461024e578063db25978214610261578063e97eb1331461026f578063eea138e11461027d578063f2fde38b1461029057600080fd5b8063984d9181146101ff5780639d3468821461021f578063c6b3c94c1461022d578063c7cc48121461024057600080fd5b8063445df9d6116100de578063445df9d614610187578063715018a6146101bc5780637d1c98ce146101c45780638da5cb5b146101e457600080fd5b80630a3cb21b1461011057806329dfcda1146101485780632b71fb3a146101645780632bd696fd14610179575b600080fd5b61013361011e366004610643565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610156662386f26fc1000081565b60405190815260200161013f565b61017761017236600461065e565b6102a3565b005b610156662aa1efb94e000081565b61018f6102d6565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161013f565b61017761032e565b6101566101d23660046106a7565b60016020526000908152604090205481565b6000546040516001600160a01b03909116815260200161013f565b61015661020d3660046106a7565b60026020526000908152604090205481565b6101566611c37937e0800081565b61017761023b3660046106c4565b610342565b61015666470de4df82000081565b61015661025c3660046106a7565b61044a565b6101566658d15e1762800081565b610156669fdf42f6e4800081565b61015661028b3660046106a7565b6104f9565b61017761029e366004610643565b61056c565b6102ab6105aa565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000806000806000806102e9600061044a565b6102f3600161044a565b6102fd600261044a565b61030760006104f9565b61031160016104f9565b61031b60026104f9565b949b939a50919850965094509092509050565b6103366105aa565b61034060006105d7565b565b3360009081526003602052604090205460ff168061036a57506000546001600160a01b031633145b6103ac5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b60006103ba826103e86106dd565b60008080527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49829055600260209081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b83905560408051848152905193945091927f238022b1e6d385323bbf0d8d87ba282ac6120f8dc78ef82f08ab5630e2fad81a9281900390910190a25050565b6000808083600281111561046057610460610708565b0361047357506611c37937e080006104a4565b600183600281111561048757610487610708565b0361049a5750662aa1efb94e00006104a4565b5066470de4df8200005b6103e8600260008560028111156104bd576104bd610708565b60028111156104ce576104ce610708565b815260200190815260200160002054826104e891906106dd565b6104f2919061071e565b9392505050565b6000808083600281111561050f5761050f610708565b036105225750662386f26fc10000610553565b600183600281111561053657610536610708565b0361054957506658d15e17628000610553565b50669fdf42f6e480005b6103e8600160008560028111156104bd576104bd610708565b6105746105aa565b6001600160a01b03811661059e57604051631e4fbdf760e01b8152600060048201526024016103a3565b6105a7816105d7565b50565b6000546001600160a01b031633146103405760405163118cdaa760e01b81523360048201526024016103a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461063e57600080fd5b919050565b60006020828403121561065557600080fd5b6104f282610627565b6000806040838503121561067157600080fd5b61067a83610627565b91506020830135801515811461068f57600080fd5b809150509250929050565b600381106105a757600080fd5b6000602082840312156106b957600080fd5b81356104f28161069a565b6000602082840312156106d657600080fd5b5035919050565b808202811582820484141761070257634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052602160045260246000fd5b60008261073b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b65d13e7c3ac8ced1abecdd77a15a43efb8dd71fe79de1bdb4ef90f3e041326564736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/PriceOracle.sol:PriceOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9578,
        "contract": "contracts/PriceOracle.sol:PriceOracle",
        "label": "cropMultipliers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_enum(CropType)9551,t_uint256)"
      },
      {
        "astId": 9583,
        "contract": "contracts/PriceOracle.sol:PriceOracle",
        "label": "seedMultipliers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_enum(SeedType)9555,t_uint256)"
      },
      {
        "astId": 9587,
        "contract": "contracts/PriceOracle.sol:PriceOracle",
        "label": "authorizedManagers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(CropType)9551": {
        "encoding": "inplace",
        "label": "enum PriceOracle.CropType",
        "numberOfBytes": "1"
      },
      "t_enum(SeedType)9555": {
        "encoding": "inplace",
        "label": "enum PriceOracle.SeedType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_enum(CropType)9551,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(CropType)9551",
        "label": "mapping(enum PriceOracle.CropType => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(SeedType)9555,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(SeedType)9555",
        "label": "mapping(enum PriceOracle.SeedType => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}